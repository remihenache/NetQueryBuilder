@using System.Linq.Expressions
<MudStack Row Spacing="4">
    <MudItem xs="8" lg="8">
        <Predicate PredicateExpression="@Lambda.Body"
                   ParameterExpression="@Parameter"
                   OnChange="@OnChangeBody">
        </Predicate>
    </MudItem>
    <MudItem xs="4" lg="4">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Lambda Expression</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudIconButton Icon="@Icons.Material.Filled.CopyAll" Color="Color.Default"/>
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                <code>@Lambda.ToString()</code>
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudStack>

@code {
    [Parameter] public LambdaExpression Lambda { get; set; }

    [Parameter] public ParameterExpression Parameter { get; set; }

    [Parameter] public Action<Expression> OnChanged { get; set; }

    protected override void OnInitialized()
    {
        OnChanged(Lambda.Body);
    }

    private void OnChangeBody(Expression body)
    {
        OnChanged(body);
    }

}